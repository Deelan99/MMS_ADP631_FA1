<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

@model MMS_ADP631_FA1.Models.Staff

<!-- Edit Modal -->
<div class="modal fade" id="editStaffModal" tabindex="-1" role="dialog" aria-labelledby="editStaffModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editStaffModalLabel">Edit Staff Member</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editStaffForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="editStaffId" name="StaffID">
                    <div class="mb-3">
                        <label class="form-label">Full Name</label>
                        <input type="text" id="editFullName" name="FullName" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Department</label>
                        <input type="text" id="editDepartment" name="Department" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Position</label>
                        <input type="text" id="editPosition" name="Position" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone Number</label>
                        <input type="text" id="editPhoneNumber" name="PhoneNumber" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" id="editEmail" name="Email" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Hire Date</label>
                        <input type="date" id="editHireDate" name="HireDate" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    //Load JSON Data from Controller
    function loadStaffForEdit(staffId) {
        fetch(`/Staff/Details/${staffId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById("editStaffId").value = staffId;
                document.getElementById("editFullName").value = data.fullName;
                document.getElementById("editDepartment").value = data.department;
                document.getElementById("editPosition").value = data.position;
                document.getElementById("editPhoneNumber").value = data.phoneNumber;
                document.getElementById("editEmail").value = data.email;
                document.getElementById("editHireDate").value = data.hireDate;

                // The date format for Date of Birth needs to be converted to JS's DATE object of YYYY-MM-DD
                if (data.hireDate) {
                    let parts = data.hireDate.split('/'); // Split DD/MM/YYYY
                    if (parts.length === 3) {
                        let formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}`; // Convert to YYYY-MM-DD
                        console.log("Formatted Date of Birth:", formattedDate);
                        document.getElementById("editHireDate").value = formattedDate;
                    } else {
                        console.warn("Invalid Date Format:", data.editHireDate);
                    }
                } else {
                    console.warn("Hire Date is missing or null.");
                }
            })
            .catch(error => console.error("Error loading staff data:", error));
    } 

        document.getElementById("editStaffForm").addEventListener("submit", function(event) {
        event.preventDefault();

        const formData = new FormData(this);
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value; // CSRF token

        const staffId = document.getElementById("editStaffId").value; // Get StaffID

        // Send a POST request to update the staff
        fetch(`/Staff/Edit/${staffId}`, {
            method: "POST",
            headers: {
                "RequestVerificationToken": token,
            },
            body: formData,
        })
        .then(response => {
            if (response.ok) {
                location.reload();
            } else {
                console.error("Failed to update staff. Status:", response.status);
                response.text().then(text => console.log("Error response text:", text));
            }
        })
        .catch(error => console.error("Error saving staff data:", error));
    });

</script>
